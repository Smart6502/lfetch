#!/usr/bin/env bash

# Linux fetch (likely using bashismo)

version=0.1.0

output=""
colour=35

get_osname()
{
	. /etc/os-release
	output=${PRETTY_NAME}
}

get_kernel()
{
	read -r output < /proc/sys/kernel/osrelease
}

get_hostname()
{
	read -r output < /proc/sys/kernel/hostname
}

get_version()
{
	read -r _ _ output _ < /proc/version
	output=${output%%-*}
}

get_last_update_date()
{
	get_version
	version=$output

	page=$(curl -s "https://mirrors.edge.kernel.org/pub/linux/kernel/v${version/.*}.x/")
	entry=$(echo "$page" | grep $version | grep gz)
	output=$(echo $entry | awk '{print $3}')
}

get_compile_time()
{
	read -r version < /proc/sys/kernel/version
	date="$(echo $version | cut -d " " -f5)-$(echo $version | cut -d " " -f6)-$(echo $version | cut -d " " -f7)"
	output="$(echo $version | cut -d " " -f8) on ${date} [$(echo $version | cut -d " " -f9)]"
}

get_uptime()
{
	read -r seconds _ < /proc/uptime
	seconds=${seconds/.*}

	hours=$((seconds / 3600))
	minutes=$((seconds / 60 % 60))
	seconds=$((seconds % 60))

	output="${hours} hours, ${minutes} minutes, ${seconds} seconds"
}

get_cpu_idle()
{
	read -r stats < /proc/stat

	e0=$(echo $stats | cut -d " " -f2)
	e1=$(echo $stats | cut -d " " -f3)
	e2=$(echo $stats | cut -d " " -f4)
	idle=$(echo $stats | cut -d " " -f5)
	e4=$(echo $stats | cut -d " " -f6)
	e5=$(echo $stats | cut -d " " -f7)
	e6=$(echo $stats | cut -d " " -f8)

	output="$(((idle * 100) / (e0 + e1 + e2 + idle + e4 + e5 + e6))) percent"
}

get_interrupts()
{
	output=$(cat /proc/interrupts | wc -l)
	output=$(($output - 1))
}

get_modules()
{
	output=$(cat /proc/modules | wc -l)
}

get_ptys()
{
	devices=$(ls -l /dev/pts | wc -l)
	output=$((devices - 2))
}

get_cmdline()
{
	read -r output < /proc/cmdline
}

get_bootloader()
{
	read -r bootloader_type < /proc/sys/kernel/bootloader_type
	read -r bootloader_version < /proc/sys/kernel/bootloader_version

	output="${bootloader_type} v.${bootloader_version}"
}

info()
{
	"get_${2:-$1}"

	printf "\e[1;%dm${1}\e[0;0m${output}\n" $colour
}

printf "\e[1;33m"

cat << "EOF"

    .--.
   |o_o |
   |:_/ |
  //   \ \
 (|     | )
/'\_   _/`\
\___)=(___/

EOF

get_hostname
printf "\e[34m${USER}\e[1;${colour}m@${output}\n"
printf "\e[0m-------------------\n"
info "OS name           ~ " osname
info "Kernel            ~ " kernel
info "Version           ~ " version
info "Last k.org update ~ " last_update_date
info "Compile time      ~ " compile_time
info "Uptime            ~ " uptime
info "CPU idle          ~ " cpu_idle
info "Interrupts        ~ " interrupts
info "Modules           ~ " modules
info "Terminals open    ~ " ptys
info "Bootloader type   ~ " bootloader
info "Cmdline           ~ " cmdline

#!/usr/bin/env bash

# Linux fetch (likely using bashismo)

version=0.1.0

colour=35

loadcfg() 
{
    if [ -f "$1" ]; then
        local CFGFILENAME=".$(basename $0)-tmp-config.$(date +%s%N)"
        echo "$(cat "$1" | sed 's/^[ \t]*//' | grep -oE '^[^0-9].*' | grep -oE '^[a-zA-Z0-9 ]*=.*' | sed -r 's#([^\])"#\1#g;s/=[\t]*/="/;s/$/"/;s/(\".*\")|\s*/\1/g;s/^/export /')" >"$CFGFILENAME"
        source "$CFGFILENAME"
        rm -f "$CFGFILENAME"
    fi
}

get_osname()
{
	. /etc/os-release
	echo ${PRETTY_NAME}
}

get_kernel()
{
	cat /proc/sys/kernel/osrelease
}

get_hostname()
{
	cat /proc/sys/kernel/hostname
}

get_version()
{
	local output
	read -r _ _ output _ < /proc/version
	echo ${output%%-*}
}

get_last_update_date()
{
	local version page entry

	version=$(get_version)

	page=$(curl -s "https://mirrors.edge.kernel.org/pub/linux/kernel/v${version/.*}.x/")
	entry=$(echo "$page" | grep $version | grep gz)
	echo $entry | awk '{print $3}'
}

get_compile_time()
{
	local version date
	read -r version < /proc/sys/kernel/version
	date="$(echo $version | cut -d " " -f5)-$(echo $version | cut -d " " -f6)-$(echo $version | cut -d " " -f7)"
	echo "$(echo $version | cut -d " " -f8) on ${date} [$(echo $version | cut -d " " -f9)]"
}

get_uptime()
{
	local seconds

	read -r seconds _ < /proc/uptime
	seconds=${seconds/.*}

	echo "$((seconds / 3600)) hours, $((seconds / 60 % 60)) minutes, $((seconds % 60)) seconds"
}

get_cpu_idle()
{
	read -r stats < /proc/stat

	e=$(echo $stats | cut -d " " -f2)
	for i in {3..8}; do
		e="$e + $(echo $stats | cut -d " " -f$i)"
	done

	echo "$(((idle * 100) / ($e))) percent"
}

get_interrupts()
{
	echo $(($(cat /proc/interrupts | wc -l) - 1))
}

get_modules()
{
	cat /proc/modules | wc -l
}

get_ptys()
{
	echo $(($(ls -l /dev/pts | wc -l) - 2))
}

get_cmdline()
{
	cat /proc/cmdline
}

get_bootloader()
{
	local bootloader_type bootloader_version
	read -r bootloader_type < /proc/sys/kernel/bootloader_type
	read -r bootloader_version < /proc/sys/kernel/bootloader_version

	echo "${bootloader_type} v.${bootloader_version}"
}

info()
{
	printf "\e[1;%dm${1}\e[0;0m$("get_${2:-$1}")\n" $colour
}

loadcfg "/etc/lfetch.conf"
loadcfg "${HOME}/.config/lfetch.conf"
loadcfg "${HOME}/.lfetch.conf"

printf "\e[1;33m"

cat << "EOF"

    .--.
   |o_o |
   |:_/ |
  //   \ \
 (|     | )
/'\_   _/`\
\___)=(___/

EOF

printf "\e[34m${USER}\e[0;1m@\e[1;${colour}m$(get_hostname)\n"
printf "\e[0m-------------------\n"
info "OS name           ~ " osname
info "Kernel            ~ " kernel
info "Version           ~ " version
info "Last k.org update ~ " last_update_date
info "Compile time      ~ " compile_time
info "Uptime            ~ " uptime
info "CPU idle          ~ " cpu_idle
info "Interrupts        ~ " interrupts
info "Modules           ~ " modules
info "Terminals open    ~ " ptys
info "Bootloader type   ~ " bootloader
info "Cmdline           ~ " cmdline

